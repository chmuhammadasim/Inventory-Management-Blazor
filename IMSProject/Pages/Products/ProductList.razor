@page "/productlist"
@attribute [Authorize]
@inject NavigationManager NavigationManager
@inject IViewProductsByNameUseCase ViewProductsByNameUseCase
<div class="backCustom2">
    <h3>Product List</h3>
</div>

<br />
<ViewProductComponent OnSearchProducts="OnSearchProducts"></ViewProductComponent>

@if (listProducts != null)
{
    <table class="table">
        <thead class="glass">
        <th>Name</th>
        <th>Quantity</th>
        <th>Price</th>
        <th>Edit</th>
        <th>Delete</th>
        </thead>
        <tbody class="glass ">
            @foreach (var pro in this.listProducts)
            {
                <ProductItemComponent product="pro" OnProductDeleted="DeleteProduct"></ProductItemComponent>
            }
        </tbody>
    </table>
    <br />
    
}
<button type="button" class="btn" @onclick="AddProduct">Add</button>
@code {
    private List<Product>? listProducts ;

    protected override async Task OnInitializedAsync()
    {
        await LoadProduct();
    }

    private async Task OnSearchProducts(List<Product> products)
    {
        this.listProducts =  products;
    }
    private void AddProduct()
    {
        NavigationManager.NavigateTo("/addproduct");
    }
    private async Task DeleteProduct()
    {
        await LoadProduct();
    }
    private async Task LoadProduct()
    {
        var prods = await ViewProductsByNameUseCase.ExecuteAsync();
        this.listProducts = prods.ToList();
    }
}
